/**
 * Plugin to extract keywords and key-phrases.
 *
 * @type {import('unified').Plugin<[Options?]|[], Root>}
 */
export default function retextKeywords(
  options?: Options | undefined
):
  | void
  | import('unified').Transformer<import('nlcst').Root, import('nlcst').Root>
export type DoNotTouchAsThisIncludesVFileData =
  typeof import('./complex-types.js')
export type Root = import('nlcst').Root
export type Sentence = import('nlcst').Sentence
export type Word = import('nlcst').Word
export type SentenceContent = import('nlcst').SentenceContent
/**
 * Configuration.
 */
export type Options = {
  /**
   * Try to detect at most `maximum` `words` and `phrases`.
   *
   * Note that actual counts may differ.
   * For example, when two words have the same score, both will be returned.
   * Or when too few words exist, less will be returned. the same goes for
   * phrases.
   */
  maximum?: number | undefined
}
export type Keyphrase = {
  score: number
  weight: number
  stems: Array<string>
  value: string
  matches: Array<PhraseMatch>
}
export type Keyword = {
  matches: Array<WordMatch>
  score: number
  stem: string
}
export type PhraseMatch = {
  nodes: Array<SentenceContent>
  parent: Sentence
}
export type WordMatch = {
  node: Word
  index: number
  parent: Sentence
}
/**
 * To do: deprecate next major, use `WordMatch` instead.
 */
export type KeywordMatch = WordMatch
